syntax = "proto3";

package project;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "com.topcoder.onlinereview.grpc.project.proto";
option java_outer_classname = "ProjectProtos";

message CountProto {
  int32 count = 1;
}

message CreateProjectRequest {
  ProjectProto project = 1;
  optional string operator = 2;
}

message UpdateProjectRequest {
  ProjectProto project = 1;
  optional string reason = 2;
  optional string operator = 3;
}

message ProjectProto {
  optional int64 id = 1;
  optional int64 direct_project_id = 2;
  optional string tc_direct_project_name = 3;
  ProjectCategoryProto project_category = 4;
  ProjectStatusProto project_status = 5;
  repeated ProjectPropertyProto properties = 6;
  repeated PrizeProto prizes = 7;
  ProjectStudioSpecProto project_studio_spec = 8;
  repeated FileTypeProto file_types = 9;
  optional string create_user = 10;
  google.protobuf.Timestamp create_date = 11;
  optional string modify_user = 12;
  google.protobuf.Timestamp modify_date = 13;
}

message ProjectCategoryProto {
  optional int64 id = 1;
  optional string name = 2;
  optional string description = 3;
  ProjectTypeProto project_type = 4;
}

message ProjectTypeProto {
  optional int64 id = 1;
  optional string name = 2;
  optional string description = 3;
  optional bool generic = 4;
}

message ProjectStatusProto {
  optional int64 id = 1;
  optional string name = 2;
  optional string description = 3;
}

message ProjectPropertyProto {
  optional int64 id = 1;
  optional int64 project_id = 2;
  optional string name = 3;
  optional string value = 4;
}

message PrizeProto {
  optional int64 id = 1;
  optional int64 project_id = 2;
  optional int32 place = 3;
  optional double prize_amount = 4;
  optional int32 number_of_submissions = 5;
  PrizeTypeProto prize_type = 6;
  optional string create_user = 7;
  google.protobuf.Timestamp create_date = 8;
  optional string modify_user = 9;
  google.protobuf.Timestamp modify_date = 10;
}

message PrizeTypeProto {
  optional int64 id = 1;
  optional string description = 2;
}

message ProjectStudioSpecProto {
  optional int64 id = 1;
  optional string goals = 2;
  optional string target_audience = 3;
  optional string branding_guidelines = 4;
  optional string disliked_design_websites = 5;
  optional string other_instructions = 6;
  optional string winning_criteria = 7;
  optional bool submitters_locked_between_rounds = 8;
  optional string round_one_introduction = 9;
  optional string round_two_introduction = 10;
  optional string colors = 11;
  optional string fonts = 12;
  optional string layout_and_size = 13;
  optional string create_user = 14;
  google.protobuf.Timestamp create_date = 15;
  optional string modify_user = 16;
  google.protobuf.Timestamp modify_date = 17;
}

message FileTypeProto {
  optional int64 id = 1;
  optional string description = 2;
  optional int32 sort = 3;
  optional bool image_file = 4;
  optional string extension = 5;
  optional bool bundled_file = 6;
  optional string create_user = 7;
  google.protobuf.Timestamp create_date = 8;
  optional string modify_user = 9;
  google.protobuf.Timestamp modify_date = 10;
}

message GetProjectIdsByDirectIdResponse {
  repeated int64 project_ids = 1;
}

message GetProjectFileTypesResponse {
  repeated FileTypeProto file_types = 1;
}

message UpdateProjectFileTypesRequest {
  optional int64 project_id = 1;
  repeated FileTypeProto file_types = 2;
  optional string operator = 3;
}

message UpdateProjectFileTypesResponse {
  repeated FileTypeProto file_types = 1;
}

message GetProjectPrizesResponse {
  repeated PrizeProto prizes = 1;
}

message UpdateProjectPrizesRequest {
  optional int64 project_id = 1;
  repeated PrizeProto prizes = 2;
  optional string operator = 3;
}

message UpdateProjectPrizesResponse {
  repeated PrizeProto prizes = 1;
}

message CreateFileTypeRequest {
  FileTypeProto file_type = 1;
  optional string operator = 2;
}

message UpdateFileTypeRequest {
  FileTypeProto file_type = 1;
  optional string operator = 2;
}

message DeleteFileTypeRequest {
  optional int64 file_type_id = 1;
  optional string operator = 2;
}

message GetAllFileTypesResponse {
  repeated FileTypeProto file_types = 1;
}

message GetAllPrizeTypesResponse {
  repeated PrizeTypeProto prize_types = 1;
}

message CreatePrizeRequest {
  PrizeProto prize = 1;
  optional string operator = 2;
}

message UpdatePrizeRequest {
  PrizeProto prize = 1;
  optional string operator = 2;
}

message DeletePrizeRequest {
  optional int64 prize_id = 1;
  optional string operator = 2;
}

message CreateStudioSpecRequest {
  ProjectStudioSpecProto project_studio_spec = 1;
  optional string operator = 2;
}

message UpdateStudioSpecRequest {
  ProjectStudioSpecProto project_studio_spec = 1;
  optional string operator = 2;
}

message DeleteStudioSpecRequest {
  optional int64 project_studio_spec_id = 1;
  optional string operator = 2;
}

message GetProjectStudioSpecResponse {
  ProjectStudioSpecProto project_studio_spec = 1;
}

message UpdateProjectStudioSpecRequest {
  optional int64 project_id = 1;
  ProjectStudioSpecProto project_studio_spec = 2;
  optional string operator = 3;
}

message ProjectPropertyTypeProto {
  optional int64 id = 1;
  optional string name = 2;
  optional string description = 3;
}

message GetAllProjectPropertyTypesResponse {
  repeated ProjectPropertyTypeProto property_types = 1;
}

message GetAllProjectTypesResponse {
  repeated ProjectTypeProto project_types = 1;
}

message GetAllProjectCategoriesResponse {
  repeated ProjectCategoryProto project_categories = 1;
}

message GetAllProjectStatusesResponse {
  repeated ProjectStatusProto project_statuses = 1;
}

message GetProjectsRequest {
  repeated int64 project_ids = 1;
}

message GetProjectsResponse {
  repeated ProjectProto projects = 1;
}

message ProjectIdProto {
  optional int64 project_id = 1;
}

message IdProto {
  optional int64 id = 1;
}

service ProjectService {
  rpc CreateProject(CreateProjectRequest) returns (ProjectProto);
  rpc UpdateProject(UpdateProjectRequest) returns (ProjectProto);
  rpc GetProjectIdsByDirectId(IdProto) returns (GetProjectIdsByDirectIdResponse);
  rpc GetProjectFileTypes(ProjectIdProto) returns (GetProjectFileTypesResponse);
  rpc UpdateProjectFileTypes(UpdateProjectFileTypesRequest) returns (UpdateProjectFileTypesResponse);
  rpc GetProjectPrizes(ProjectIdProto) returns (GetProjectPrizesResponse);
  rpc UpdateProjectPrizes(UpdateProjectPrizesRequest) returns (UpdateProjectPrizesResponse);
  rpc CreateFileType(CreateFileTypeRequest) returns (FileTypeProto);
  rpc UpdateFileType(UpdateFileTypeRequest) returns (FileTypeProto);
  rpc DeleteFileType(DeleteFileTypeRequest) returns (CountProto);
  rpc GetAllFileTypes(google.protobuf.Empty) returns (GetAllFileTypesResponse);
  rpc GetAllPrizeTypes(google.protobuf.Empty) returns (GetAllPrizeTypesResponse);
  rpc CreatePrize(CreatePrizeRequest) returns (PrizeProto);
  rpc UpdatePrize(UpdatePrizeRequest) returns (PrizeProto);
  rpc DeletePrize(DeletePrizeRequest) returns (CountProto);
  rpc CreateStudioSpec(CreateStudioSpecRequest) returns (ProjectStudioSpecProto);
  rpc UpdateStudioSpec(UpdateStudioSpecRequest) returns (ProjectStudioSpecProto);
  rpc DeleteStudioSpec(DeleteStudioSpecRequest) returns (CountProto);
  rpc GetProjectStudioSpec(ProjectIdProto) returns (GetProjectStudioSpecResponse);
  rpc UpdateProjectStudioSpec(UpdateProjectStudioSpecRequest) returns (ProjectStudioSpecProto);
  rpc GetAllProjectPropertyTypes(google.protobuf.Empty) returns (GetAllProjectPropertyTypesResponse);
  rpc GetAllProjectTypes(google.protobuf.Empty) returns (GetAllProjectTypesResponse);
  rpc GetAllProjectCategories(google.protobuf.Empty) returns (GetAllProjectCategoriesResponse);
  rpc GetAllProjectStatuses(google.protobuf.Empty) returns (GetAllProjectStatusesResponse);
  rpc GetProjects(GetProjectsRequest) returns (GetProjectsResponse);
}